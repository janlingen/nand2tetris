// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    RAM4K(in = in, load = loadr1, address = address[2..13], out = outr1);
    RAM4K(in = in, load = loadr2, address = address[2..13], out = outr2);
    RAM4K(in = in, load = loadr3, address = address[2..13], out = outr3);
    RAM4K(in = in, load = loadr4, address = address[2..13], out = outr4);

    // write
    DMux4Way(in = load, sel = address[0..1],    a = loadr1,
                                                b = loadr2,
                                                c = loadr3,
                                                d = loadr4);

    // read
    Mux4Way16(sel = address[0..1], out = out,   a = outr1,
                                                b = outr2,
                                                c = outr3,
                                                d = outr4);
}